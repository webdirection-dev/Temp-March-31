{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectControlInfo } from '../../control/control-slice';\nimport { selectOpeningInfo } from '../../opening/opening-slice';\nimport { setUpdateDescription, selectUpdateInfo } from '../update-slice';\nimport { useCopyUpdate } from './use-copy-update';\nexport const useUpdate = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    stand,\n    qualities\n  } = useSelector(store => selectControlInfo(store).controls);\n  const {\n    isInside\n  } = useSelector(store => selectOpeningInfo(store).data);\n  const {\n    updateDescription\n  } = useSelector(store => selectUpdateInfo(store).data);\n  const {\n    copySummary\n  } = useCopyUpdate(stand, qualities, isInside, updateDescription);\n  const onWriteInputUpdate = e => {\n    dispatch(setUpdateDescription(e.target.value));\n  };\n  return {\n    copySummary,\n    updateDescription,\n    isInside,\n    stand,\n    qualities,\n    onWriteInputUpdate\n  };\n};\n_s(useUpdate, \"l+dw4LD8HO5T05Bh04vHSx8qH0k=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useCopyUpdate];\n});","map":{"version":3,"names":["useSelector","useDispatch","selectControlInfo","selectOpeningInfo","setUpdateDescription","selectUpdateInfo","useCopyUpdate","useUpdate","_s","dispatch","stand","qualities","store","controls","isInside","data","updateDescription","copySummary","onWriteInputUpdate","e","target","value"],"sources":["/Users/admin/developing/Temp-March-31/src/features/update/hooks/use-update.js"],"sourcesContent":["import {useSelector, useDispatch} from 'react-redux'\nimport {selectControlInfo} from '../../control/control-slice'\nimport {selectOpeningInfo} from '../../opening/opening-slice'\nimport {setUpdateDescription, selectUpdateInfo} from '../update-slice'\nimport {useCopyUpdate} from './use-copy-update'\n\nexport const useUpdate = () => {\n    const dispatch = useDispatch()\n    const {stand, qualities} = useSelector(store => selectControlInfo(store).controls)\n    const {isInside} = useSelector(store => selectOpeningInfo(store).data)\n    const {updateDescription} = useSelector(store => selectUpdateInfo(store).data)\n    const {copySummary} = useCopyUpdate(stand, qualities, isInside, updateDescription)\n\n    const onWriteInputUpdate = (e) => {\n        dispatch(setUpdateDescription(e.target.value))\n    }\n\n    return {copySummary, updateDescription, isInside, stand, qualities, onWriteInputUpdate}\n}\n"],"mappings":";AAAA,SAAQA,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,iBAAiB,QAAO,6BAA6B;AAC7D,SAAQC,iBAAiB,QAAO,6BAA6B;AAC7D,SAAQC,oBAAoB,EAAEC,gBAAgB,QAAO,iBAAiB;AACtE,SAAQC,aAAa,QAAO,mBAAmB;AAE/C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACS,KAAK;IAAEC;EAAS,CAAC,GAAGX,WAAW,CAACY,KAAK,IAAIV,iBAAiB,CAACU,KAAK,CAAC,CAACC,QAAQ,CAAC;EAClF,MAAM;IAACC;EAAQ,CAAC,GAAGd,WAAW,CAACY,KAAK,IAAIT,iBAAiB,CAACS,KAAK,CAAC,CAACG,IAAI,CAAC;EACtE,MAAM;IAACC;EAAiB,CAAC,GAAGhB,WAAW,CAACY,KAAK,IAAIP,gBAAgB,CAACO,KAAK,CAAC,CAACG,IAAI,CAAC;EAC9E,MAAM;IAACE;EAAW,CAAC,GAAGX,aAAa,CAACI,KAAK,EAAEC,SAAS,EAAEG,QAAQ,EAAEE,iBAAiB,CAAC;EAElF,MAAME,kBAAkB,GAAIC,CAAC,IAAK;IAC9BV,QAAQ,CAACL,oBAAoB,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAClD,CAAC;EAED,OAAO;IAACJ,WAAW;IAAED,iBAAiB;IAAEF,QAAQ;IAAEJ,KAAK;IAAEC,SAAS;IAAEO;EAAkB,CAAC;AAC3F,CAAC;AAAAV,EAAA,CAZYD,SAAS;EAAA,QACDN,WAAW,EACDD,WAAW,EACnBA,WAAW,EACFA,WAAW,EACjBM,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}