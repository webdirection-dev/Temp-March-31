{"ast":null,"code":"import { addZero } from './var';\nexport const timeDuration = (startTime, finishDate, mathFloor) => {\n  let duration = Date.parse(finishDate) - Date.parse(startTime),\n    // seconds = addZero(Math.floor((duration / 1000) % 60)), // секунды делим на 60 секунд, остаток = кол-во секунд\n    minutes = addZero(Math.ceil(duration / 1000 / 60 % 60)),\n    // секунды / секунды / минуты, остаток минуты\n    hours = addZero(Math.floor(duration / (1000 * 60 * 60) % 24)),\n    // милисек/(1000* 60*60) отстаток от 24 часов\n    days = addZero(Math.floor(duration / (1000 * 60 * 60 * 24))); // остаток дней\n\n  if (mathFloor) minutes = addZero(Math.floor(duration / 1000 / 60 % 60));\n  if (duration >= 0) {\n    const dayPrint = days !== '00' ? `${days}дн.` : '';\n    let hourPrint = hours !== '00' ? `${hours}ч.` : '';\n    let minutePrint = minutes !== '00' ? `${minutes}мин.` : '';\n    if (minutes === 60) {\n      hourPrint = `${addZero(+hours + 1)}ч.`;\n      minutePrint = ``;\n    }\n    return `${dayPrint} ${hourPrint} ${minutePrint}`.trim();\n  } else return '0дн. 0ч. 0мин.';\n};","map":{"version":3,"names":["addZero","timeDuration","startTime","finishDate","mathFloor","duration","Date","parse","minutes","Math","ceil","hours","floor","days","dayPrint","hourPrint","minutePrint","trim"],"sources":["/Users/admin/developing/Temp-March-31/src/static/helpers/timeDuration.js"],"sourcesContent":["import {addZero} from './var'\n\nexport const timeDuration = (startTime, finishDate, mathFloor) => {\n    let duration = Date.parse(finishDate) - Date.parse(startTime),\n        // seconds = addZero(Math.floor((duration / 1000) % 60)), // секунды делим на 60 секунд, остаток = кол-во секунд\n        minutes = addZero(Math.ceil((duration / 1000 / 60) % 60)), // секунды / секунды / минуты, остаток минуты\n        hours = addZero(Math.floor((duration / (1000 * 60 * 60)) % 24)), // милисек/(1000* 60*60) отстаток от 24 часов\n        days = addZero(Math.floor(duration / (1000 * 60 * 60 * 24))); // остаток дней\n\n    if (mathFloor) minutes = addZero(Math.floor((duration / 1000 / 60) % 60))\n\n    if (duration >= 0) {\n        const dayPrint = days !== '00' ? `${days}дн.` : ''\n        let hourPrint = hours !== '00' ? `${hours}ч.` : ''\n        let minutePrint = minutes !== '00' ? `${minutes}мин.` : ''\n\n        if (minutes === 60) {\n            hourPrint = `${addZero(+hours + 1)}ч.`\n            minutePrint = ``\n        }\n\n        return `${dayPrint} ${hourPrint} ${minutePrint}`.trim()\n    } else return  '0дн. 0ч. 0мин.'\n}\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,OAAO;AAE7B,OAAO,MAAMC,YAAY,GAAGA,CAACC,SAAS,EAAEC,UAAU,EAAEC,SAAS,KAAK;EAC9D,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;IACzD;IACAM,OAAO,GAAGR,OAAO,CAACS,IAAI,CAACC,IAAI,CAAEL,QAAQ,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC,CAAC;IAAE;IAC3DM,KAAK,GAAGX,OAAO,CAACS,IAAI,CAACG,KAAK,CAAEP,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC,CAAC;IAAE;IACjEQ,IAAI,GAAGb,OAAO,CAACS,IAAI,CAACG,KAAK,CAACP,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;EAElE,IAAID,SAAS,EAAEI,OAAO,GAAGR,OAAO,CAACS,IAAI,CAACG,KAAK,CAAEP,QAAQ,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC,CAAC;EAEzE,IAAIA,QAAQ,IAAI,CAAC,EAAE;IACf,MAAMS,QAAQ,GAAGD,IAAI,KAAK,IAAI,GAAI,GAAEA,IAAK,KAAI,GAAG,EAAE;IAClD,IAAIE,SAAS,GAAGJ,KAAK,KAAK,IAAI,GAAI,GAAEA,KAAM,IAAG,GAAG,EAAE;IAClD,IAAIK,WAAW,GAAGR,OAAO,KAAK,IAAI,GAAI,GAAEA,OAAQ,MAAK,GAAG,EAAE;IAE1D,IAAIA,OAAO,KAAK,EAAE,EAAE;MAChBO,SAAS,GAAI,GAAEf,OAAO,CAAC,CAACW,KAAK,GAAG,CAAC,CAAE,IAAG;MACtCK,WAAW,GAAI,EAAC;IACpB;IAEA,OAAQ,GAAEF,QAAS,IAAGC,SAAU,IAAGC,WAAY,EAAC,CAACC,IAAI,CAAC,CAAC;EAC3D,CAAC,MAAM,OAAQ,gBAAgB;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}